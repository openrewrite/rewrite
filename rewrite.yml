#
# Copyright 2024 the original author or authors.
# <p>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://www.apache.org/licenses/LICENSE-2.0
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Apply a subset of best practices to OpenRewrite recipes; typically run before committing changes.
# Any differences produced by this recipe will result in code suggestion comments on pull requests.
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.recipes.OpenRewriteBestPracticesSubset
displayName: OpenRewrite best practices
description: Best practices for OpenRewrite recipe development.
recipeList:
  - org.openrewrite.recipes.JavaRecipeBestPracticesSubset
  - org.openrewrite.recipes.RecipeTestingBestPracticesSubset
  - org.openrewrite.recipes.RecipeNullabilityBestPracticesSubset
  #- org.openrewrite.java.OrderImports
  - org.openrewrite.java.format.EmptyNewlineAtEndOfFile
  - org.openrewrite.staticanalysis.InlineVariable
  - org.openrewrite.staticanalysis.MissingOverrideAnnotation
  - org.openrewrite.staticanalysis.UseDiamondOperator
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.recipes.JavaRecipeBestPracticesSubset
displayName: Java Recipe best practices
description: Best practices for Java recipe development.
preconditions:
  - org.openrewrite.java.search.FindTypes:
      fullyQualifiedTypeName: org.openrewrite.Recipe
      checkAssignability: true
recipeList:
  - org.openrewrite.java.recipes.BlankLinesAroundFieldsWithAnnotations
  - org.openrewrite.java.recipes.ExecutionContextParameterName
  - org.openrewrite.java.recipes.MissingOptionExample
  - org.openrewrite.java.recipes.RecipeEqualsAndHashCodeCallSuper
  - org.openrewrite.java.recipes.UseTreeRandomId
  - org.openrewrite.staticanalysis.NeedBraces
  #- org.openrewrite.staticanalysis.RemoveSystemOutPrintln
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.recipes.RecipeTestingBestPracticesSubset
displayName: Recipe testing best practices
description: Best practices for testing recipes.
preconditions:
  - org.openrewrite.java.search.FindTypes:
      fullyQualifiedTypeName: org.openrewrite.test.RewriteTest
      checkAssignability: true
recipeList:
  - org.openrewrite.java.recipes.RewriteTestClassesShouldNotBePublic
  #- org.openrewrite.java.recipes.SelectRecipeExamples
  - org.openrewrite.java.recipes.SourceSpecTextBlockIndentation
  - org.openrewrite.java.testing.cleanup.RemoveTestPrefix
  - org.openrewrite.java.testing.cleanup.TestsShouldNotBePublic
  - org.openrewrite.staticanalysis.NeedBraces
  - org.openrewrite.staticanalysis.RemoveSystemOutPrintln
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.recipes.RecipeNullabilityBestPracticesSubset
displayName: Recipe nullability best practices
description: Use OpenRewrite internal nullability annotations; drop JetBrains annotations; use `package-info.java` instead.
recipeList:
  - org.openrewrite.staticanalysis.NullableOnMethodReturnType
  - org.openrewrite.java.RemoveAnnotation:
      annotationPattern: '@org.jetbrains.annotations.NotNull'
  - org.openrewrite.java.RemoveAnnotation:
      annotationPattern: '@jakarta.annotation.Nonnull'
  #- org.openrewrite.java.jspecify.MigrateToJspecify