{"state":"NO_CHANGE"}
  JavaScriptSender:42 => await q.getAndSend(j, j2 => j2.id);
  JavaScriptReceiver:567 => draft.id = await q.receive(j.id);
{"state":"NO_CHANGE"}
  JavaScriptSender:43 => await q.getAndSend(j, j2 => j2.prefix, space => this.visitSpace(space, q));
  JavaScriptReceiver:568 => draft.prefix = await q.receive(j.prefix, space => this.visitSpace(space, q));
{"state":"NO_CHANGE"}
  JavaScriptSender:44 => await q.getAndSend(j, j2 => j2.markers);
  JavaScriptReceiver:569 => draft.markers = await q.receive(j.markers);
{"state":"NO_CHANGE"}
  JavaScriptSender:49 => await q.getAndSend(cu, c => c.sourcePath);
  JavaScriptReceiver:577 => draft.sourcePath = await q.receive(cu.sourcePath);
{"state":"NO_CHANGE"}
  JavaScriptSender:50 => await q.getAndSend(cu, c => c.charsetName);
  JavaScriptReceiver:578 => draft.charsetName = await q.receive(cu.charsetName);
{"state":"NO_CHANGE"}
  JavaScriptSender:51 => await q.getAndSend(cu, c => c.charsetBomMarked);
  JavaScriptReceiver:579 => draft.charsetBomMarked = await q.receive(cu.charsetBomMarked);
{"state":"NO_CHANGE"}
  JavaScriptSender:52 => await q.getAndSend(cu, c => c.checksum);
  JavaScriptReceiver:580 => draft.checksum = await q.receive(cu.checksum);
{"state":"NO_CHANGE"}
  JavaScriptSender:53 => await q.getAndSend(cu, c => c.fileAttributes);
  JavaScriptReceiver:581 => draft.fileAttributes = await q.receive(cu.fileAttributes);
{"state":"CHANGE"}
  JavaScriptSender:54 => await q.getAndSendList(cu, c => c.statements, stmt => stmt.element.id, stmt => this.visitRightPadded(stmt, q));
  JavaScriptReceiver:582 => draft.statements = await q.receiveListDefined(cu.statements, stmt => this.visitRightPadded(stmt, q));
{"state":"ADD","valueType":"org.openrewrite.java.tree.JRightPadded"}
  JavaScriptSender:54 => await q.getAndSendList(cu, c => c.statements, stmt => stmt.element.id, stmt => this.visitRightPadded(stmt, q));
  undefined
{"state":"ADD","valueType":"org.openrewrite.javascript.tree.JS$Import"}
  JavaScriptSender:510 => return this.javaSender.visitRightPadded(right, q);
  JavaScriptReceiver:1106 => return this.javaReceiverDelegate.visitRightPadded(right, q)
{"state":"ADD","value":"49502576-da0b-46ec-afae-c763626588c5"}
  JavaScriptSender:42 => await q.getAndSend(j, j2 => j2.id);
  JavaScriptReceiver:567 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.java.tree.Space"}
  JavaScriptSender:43 => await q.getAndSend(j, j2 => j2.prefix, space => this.visitSpace(space, q));
  JavaScriptReceiver:568 => draft.prefix = await q.receive(j.prefix, space => this.visitSpace(space, q));
{"state":"ADD"}
  JavaScriptSender:522 => return this.javaSender.visitSpace(space, q);
  JavaScriptReceiver:1118 => return this.javaReceiverDelegate.visitSpace(space, q);
{"state":"ADD","valueType":"org.openrewrite.marker.Markers"}
  JavaScriptSender:44 => await q.getAndSend(j, j2 => j2.markers);
  JavaScriptReceiver:569 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"c80d2c98-f36a-4f09-aff9-fcada004e5d4"}
  JavaScriptSender:44 => await q.getAndSend(j, j2 => j2.markers);
  undefined
{"state":"ADD"}
  JavaScriptSender:137 => await q.getAndSendList(jsImport, el => el.modifiers, el => el.id, el => this.visit(el, q));
  JavaScriptReceiver:680 => draft.modifiers = await q.receiveListDefined(draft.modifiers, el => this.visitDefined<J.Modifier>(el, q));
{"state":"ADD","valueType":"org.openrewrite.javascript.tree.JS$ImportClause"}
  JavaScriptSender:138 => await q.getAndSend(jsImport, el => el.importClause, el => this.visit(el, q));
  JavaScriptReceiver:681 => draft.importClause = await q.receive(draft.importClause, el => this.visitDefined<JS.ImportClause>(el, q));
{"state":"ADD","value":"3d34b6c1-5d85-47e5-bf94-e406dce1c7bd"}
  JavaScriptSender:42 => await q.getAndSend(j, j2 => j2.id);
  JavaScriptReceiver:567 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.java.tree.Space"}
  JavaScriptSender:43 => await q.getAndSend(j, j2 => j2.prefix, space => this.visitSpace(space, q));
  JavaScriptReceiver:568 => draft.prefix = await q.receive(j.prefix, space => this.visitSpace(space, q));
{"state":"ADD"}
  JavaScriptSender:522 => return this.javaSender.visitSpace(space, q);
  JavaScriptReceiver:1118 => return this.javaReceiverDelegate.visitSpace(space, q);
{"state":"ADD","valueType":"org.openrewrite.marker.Markers"}
  JavaScriptSender:44 => await q.getAndSend(j, j2 => j2.markers);
  JavaScriptReceiver:569 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"c80d2c98-f36a-4f09-aff9-fcada004e5d4"}
  JavaScriptSender:44 => await q.getAndSend(j, j2 => j2.markers);
  undefined
{"state":"ADD","value":false}
  JavaScriptSender:146 => await q.getAndSend(jsImportClause, el => el.typeOnly);
  JavaScriptReceiver:690 => draft.typeOnly = await q.receive(draft.typeOnly);
{"state":"ADD","valueType":"org.openrewrite.java.tree.JRightPadded"}
  JavaScriptSender:147 => await q.getAndSend(jsImportClause, el => el.name, el => this.visitRightPadded(el, q));
  JavaScriptReceiver:691 => draft.name = await q.receive(draft.name, el => this.visitRightPadded(el, q));
{"state":"ADD","valueType":"org.openrewrite.java.tree.J$Identifier"}
  JavaScriptSender:510 => return this.javaSender.visitRightPadded(right, q);
  JavaScriptReceiver:1106 => return this.javaReceiverDelegate.visitRightPadded(right, q)
{"state":"ADD","value":"7fa7b9a9-1825-493f-abe5-e9888ebced4e"}
  JavaScriptSender:510 => return this.javaSender.visitRightPadded(right, q);
  undefined
{"state":"NO_CHANGE"}
  JavaScriptSender:148 => await q.getAndSend(jsImportClause, el => el.namedBindings, el => this.visit(el, q));
  JavaScriptReceiver:692 => draft.namedBindings = await q.receive(draft.namedBindings, el => this.visitDefined<Expression>(el, q));
{"state":"ADD","valueType":"org.openrewrite.java.tree.JLeftPadded"}
  JavaScriptSender:139 => await q.getAndSend(jsImport, el => el.moduleSpecifier, el => this.visitLeftPadded(el, q));
  JavaScriptReceiver:682 => draft.moduleSpecifier = await q.receive(draft.moduleSpecifier, el => this.visitLeftPadded(el, q));
{"state":"ADD","valueType":"org.openrewrite.java.tree.Space"}
  JavaScriptSender:514 => return this.javaSender.visitLeftPadded(left, q);
  JavaScriptReceiver:1110 => return this.javaReceiverDelegate.visitLeftPadded(left, q);
{"state":"ADD"}
  JavaScriptSender:514 => return this.javaSender.visitLeftPadded(left, q);
  undefined
{"state":"NO_CHANGE"}
  JavaScriptSender:140 => await q.getAndSend(jsImport, el => el.attributes, el => this.visit(el, q));
  JavaScriptReceiver:683 => draft.attributes = await q.receive(draft.attributes, el => this.visitDefined<JS.ImportAttributes>(el, q));
{"state":"NO_CHANGE"}
  JavaScriptSender:141 => await q.getAndSend(jsImport, el => el.initializer, el => this.visitLeftPadded(el, q));
  JavaScriptReceiver:684 => draft.initializer = await q.receive(draft.initializer, el => this.visitLeftPadded(el, q));
{"state":"CHANGE"}
  JavaScriptSender:54 => await q.getAndSendList(cu, c => c.statements, stmt => stmt.element.id, stmt => this.visitRightPadded(stmt, q));
  undefined
{"state":"CHANGE"}
  JavaScriptSender:510 => return this.javaSender.visitRightPadded(right, q);
  JavaScriptReceiver:1106 => return this.javaReceiverDelegate.visitRightPadded(right, q)
{"state":"NO_CHANGE"}
  JavaScriptSender:510 => return this.javaSender.visitRightPadded(right, q);
  undefined
{"state":"ADD","value":"6c66a7bd-3424-426e-9462-443b62b98a01"}
  JavaScriptSender:42 => await q.getAndSend(j, j2 => j2.id);
  JavaScriptReceiver:567 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.java.tree.Space"}
  JavaScriptSender:43 => await q.getAndSend(j, j2 => j2.prefix, space => this.visitSpace(space, q));
  JavaScriptReceiver:568 => draft.prefix = await q.receive(j.prefix, space => this.visitSpace(space, q));
{"state":"ADD"}
  JavaScriptSender:522 => return this.javaSender.visitSpace(space, q);
  JavaScriptReceiver:1118 => return this.javaReceiverDelegate.visitSpace(space, q);
{"state":"ADD","valueType":"org.openrewrite.marker.Markers"}
  JavaScriptSender:44 => await q.getAndSend(j, j2 => j2.markers);
  JavaScriptReceiver:569 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"c80d2c98-f36a-4f09-aff9-fcada004e5d4"}
  JavaScriptSender:44 => await q.getAndSend(j, j2 => j2.markers);
  undefined
{"state":"ADD"}
  JavaScriptSender:66 => await q.getAndSendList(arrowFunction, el => el.leadingAnnotations, el => el.id, el => this.visit(el, q));
  JavaScriptReceiver:597 => draft.leadingAnnotations = await q.receiveListDefined(draft.leadingAnnotations, el => this.visitDefined<J.Annotation>(el, q));
{"state":"ADD"}
  JavaScriptSender:67 => await q.getAndSendList(arrowFunction, el => el.modifiers, el => el.id, el => this.visit(el, q));
  JavaScriptReceiver:598 => draft.modifiers = await q.receiveListDefined(draft.modifiers, el => this.visitDefined<J.Modifier>(el, q));
{"state":"NO_CHANGE"}
  JavaScriptSender:68 => await q.getAndSend(arrowFunction, el => el.typeParameters, el => this.visit(el, q));
  JavaScriptReceiver:599 => draft.typeParameters = await q.receive(draft.typeParameters, el => this.visitDefined<J.TypeParameters>(el, q));
{"state":"ADD","valueType":"org.openrewrite.java.tree.J$Lambda"}
  JavaScriptSender:69 => await q.getAndSend(arrowFunction, el => el.lambda, el => this.visit(el, q));
  JavaScriptReceiver:600 => draft.lambda = await q.receive(draft.lambda, el => this.visitDefined<J.Lambda>(el, q));
{"state":"ADD","value":"afa2a3d0-844a-4691-805f-c9348a45c9a8"}
  JavaScriptSender:38 => return this.javaSender.visit(tree, p, parent);
  JavaScriptReceiver:561 => return this.javaReceiverDelegate.visit(tree, p, parent);
{"state":"NO_CHANGE"}
  JavaScriptSender:70 => await q.getAndSend(arrowFunction, el => el.returnTypeExpression, el => this.visit(el, q));
  JavaScriptReceiver:601 => draft.returnTypeExpression = await q.receive(draft.returnTypeExpression, el => this.visitDefined<TypeTree>(el, q));
{"state":"NO_CHANGE"}
  JavaScriptSender:55 => await q.getAndSend(cu, c => c.eof, space => this.visitSpace(space, q));
  JavaScriptReceiver:583 => draft.eof = await q.receive(cu.eof, space => this.visitSpace(space, q));
