{"state":"ADD","value":"5f2eaede-135f-4ab4-bab6-3cb5e8e8d03e"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":0}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":""}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","valueType":"org.openrewrite.marker.Markers","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"c80d2c98-f36a-4f09-aff9-fcada004e5d4"}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  undefined
{"state":"ADD","value":"package.json"}
  JsonSender:33 => await q.getAndSend(document, d => d.sourcePath);
  JsonReceiver:110 => draft.sourcePath = await q.receive(document.sourcePath);
{"state":"NO_CHANGE"}
  JsonSender:34 => await q.getAndSend(document, d => d.charsetName);
  JsonReceiver:111 => draft.charsetName = await q.receive(document.charsetName);
{"state":"NO_CHANGE"}
  JsonSender:35 => await q.getAndSend(document, d => d.charsetBomMarked);
  JsonReceiver:112 => draft.charsetBomMarked = await q.receive(document.charsetBomMarked);
{"state":"NO_CHANGE"}
  JsonSender:36 => await q.getAndSend(document, d => d.checksum);
  JsonReceiver:113 => draft.checksum = await q.receive(document.checksum);
{"state":"NO_CHANGE"}
  JsonSender:37 => await q.getAndSend(document, d => d.fileAttributes);
  JsonReceiver:114 => draft.fileAttributes = await q.receive(document.fileAttributes);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$JsonObject"}
  JsonSender:38 => await q.getAndSend(document, d => d.value,
  JsonReceiver:115 => draft.value = await q.receive<Json.Value>(document.value, async j => await this.visit(j, q)!);
{"state":"ADD","value":"57fc51b1-d8e8-4317-9ae3-2ea0ef1c9b1c"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":2}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":""}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD"}
  JsonSender:73 => await q.getAndSendList(obj, o => o.members, j => j.element.id,
  JsonReceiver:155 => draft.members = await q.receiveListDefined(obj.members,
{"state":"ADD","valueType":"org.openrewrite.json.tree.RightPadded"}
  JsonSender:73 => await q.getAndSendList(obj, o => o.members, j => j.element.id,
  undefined
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Member"}
  JsonSender:90 => await q.getAndSend(right, r => r.element, j => this.visit(j, q));
  JsonReceiver:179 => draft.element = await p.receive(right.element, async j => await this.visit(j, p)!) as Draft<T>;
{"state":"ADD","value":"86243acf-31a2-422c-a381-ae5f76765610"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":3}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":""}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.RightPadded"}
  JsonSender:67 => await q.getAndSend(member, m => m.key, async j => await this.visitRightPadded(j, q));
  JsonReceiver:146 => draft.key = await q.receive(member.key,
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Literal"}
  JsonSender:90 => await q.getAndSend(right, r => r.element, j => this.visit(j, q));
  JsonReceiver:179 => draft.element = await p.receive(right.element, async j => await this.visit(j, p)!) as Draft<T>;
{"state":"ADD","value":"e96fdf63-8d71-4eaa-96cb-23c65ee9bc8d"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":4}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":"\n  "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"\"name\""}
  JsonSender:61 => await q.getAndSend(literal, lit => lit.source);
  JsonReceiver:139 => draft.source = await q.receive(literal.source);
{"state":"ADD","value":"name"}
  JsonSender:62 => await q.getAndSend(literal, lit => lit.value);
  JsonReceiver:140 => draft.value = await q.receive(literal.value);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":5}
  JsonSender:91 => await q.getAndSend(right, r => asRef(r.after), async space => await this.visitSpace(space, q));
  JsonReceiver:180 => draft.after = await p.receive(right.after, async space => await this.visitSpace(space, p));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":""}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:92 => await q.getAndSend(right, r => r.markers);
  JsonReceiver:181 => draft.markers = await p.receiveMarkers(right.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Literal"}
  JsonSender:68 => await q.getAndSend(member, m => m.value, async j => await this.visit(j, q));
  JsonReceiver:148 => draft.value = await q.receive<Json.Value>(member.value,
{"state":"ADD","value":"d3391974-e787-498b-89ea-b18e36b03a25"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":6}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":" "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"\"test-project\""}
  JsonSender:61 => await q.getAndSend(literal, lit => lit.source);
  JsonReceiver:139 => draft.source = await q.receive(literal.source);
{"state":"ADD","value":"test-project"}
  JsonSender:62 => await q.getAndSend(literal, lit => lit.value);
  JsonReceiver:140 => draft.value = await q.receive(literal.value);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":7}
  JsonSender:91 => await q.getAndSend(right, r => asRef(r.after), async space => await this.visitSpace(space, q));
  JsonReceiver:180 => draft.after = await p.receive(right.after, async space => await this.visitSpace(space, p));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":""}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:92 => await q.getAndSend(right, r => r.markers);
  JsonReceiver:181 => draft.markers = await p.receiveMarkers(right.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.RightPadded"}
  JsonSender:73 => await q.getAndSendList(obj, o => o.members, j => j.element.id,
  undefined
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Member"}
  JsonSender:90 => await q.getAndSend(right, r => r.element, j => this.visit(j, q));
  JsonReceiver:179 => draft.element = await p.receive(right.element, async j => await this.visit(j, p)!) as Draft<T>;
{"state":"ADD","value":"39b72eaf-336a-447d-a8f2-d50f3180c838"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","ref":3}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.RightPadded"}
  JsonSender:67 => await q.getAndSend(member, m => m.key, async j => await this.visitRightPadded(j, q));
  JsonReceiver:146 => draft.key = await q.receive(member.key,
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Literal"}
  JsonSender:90 => await q.getAndSend(right, r => r.element, j => this.visit(j, q));
  JsonReceiver:179 => draft.element = await p.receive(right.element, async j => await this.visit(j, p)!) as Draft<T>;
{"state":"ADD","value":"45af3471-03f3-4557-88f4-79b82b6e1914"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":8}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":"\n  "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"\"version\""}
  JsonSender:61 => await q.getAndSend(literal, lit => lit.source);
  JsonReceiver:139 => draft.source = await q.receive(literal.source);
{"state":"ADD","value":"version"}
  JsonSender:62 => await q.getAndSend(literal, lit => lit.value);
  JsonReceiver:140 => draft.value = await q.receive(literal.value);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":9}
  JsonSender:91 => await q.getAndSend(right, r => asRef(r.after), async space => await this.visitSpace(space, q));
  JsonReceiver:180 => draft.after = await p.receive(right.after, async space => await this.visitSpace(space, p));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":""}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:92 => await q.getAndSend(right, r => r.markers);
  JsonReceiver:181 => draft.markers = await p.receiveMarkers(right.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Literal"}
  JsonSender:68 => await q.getAndSend(member, m => m.value, async j => await this.visit(j, q));
  JsonReceiver:148 => draft.value = await q.receive<Json.Value>(member.value,
{"state":"ADD","value":"f2c6f962-7408-44b0-8082-cf2784b5b540"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":10}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":" "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"\"1.0.0\""}
  JsonSender:61 => await q.getAndSend(literal, lit => lit.source);
  JsonReceiver:139 => draft.source = await q.receive(literal.source);
{"state":"ADD","value":"1.0.0"}
  JsonSender:62 => await q.getAndSend(literal, lit => lit.value);
  JsonReceiver:140 => draft.value = await q.receive(literal.value);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":11}
  JsonSender:91 => await q.getAndSend(right, r => asRef(r.after), async space => await this.visitSpace(space, q));
  JsonReceiver:180 => draft.after = await p.receive(right.after, async space => await this.visitSpace(space, p));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":""}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:92 => await q.getAndSend(right, r => r.markers);
  JsonReceiver:181 => draft.markers = await p.receiveMarkers(right.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.RightPadded"}
  JsonSender:73 => await q.getAndSendList(obj, o => o.members, j => j.element.id,
  undefined
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Member"}
  JsonSender:90 => await q.getAndSend(right, r => r.element, j => this.visit(j, q));
  JsonReceiver:179 => draft.element = await p.receive(right.element, async j => await this.visit(j, p)!) as Draft<T>;
{"state":"ADD","value":"3073e8a3-0590-4600-945c-f1b783654496"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","ref":3}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.RightPadded"}
  JsonSender:67 => await q.getAndSend(member, m => m.key, async j => await this.visitRightPadded(j, q));
  JsonReceiver:146 => draft.key = await q.receive(member.key,
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Literal"}
  JsonSender:90 => await q.getAndSend(right, r => r.element, j => this.visit(j, q));
  JsonReceiver:179 => draft.element = await p.receive(right.element, async j => await this.visit(j, p)!) as Draft<T>;
{"state":"ADD","value":"258d9339-f02e-49a5-a04b-d920f2de6522"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":12}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":"\n  "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"\"dependencies\""}
  JsonSender:61 => await q.getAndSend(literal, lit => lit.source);
  JsonReceiver:139 => draft.source = await q.receive(literal.source);
{"state":"ADD","value":"dependencies"}
  JsonSender:62 => await q.getAndSend(literal, lit => lit.value);
  JsonReceiver:140 => draft.value = await q.receive(literal.value);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":13}
  JsonSender:91 => await q.getAndSend(right, r => asRef(r.after), async space => await this.visitSpace(space, q));
  JsonReceiver:180 => draft.after = await p.receive(right.after, async space => await this.visitSpace(space, p));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":""}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:92 => await q.getAndSend(right, r => r.markers);
  JsonReceiver:181 => draft.markers = await p.receiveMarkers(right.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$JsonObject"}
  JsonSender:68 => await q.getAndSend(member, m => m.value, async j => await this.visit(j, q));
  JsonReceiver:148 => draft.value = await q.receive<Json.Value>(member.value,
{"state":"ADD","value":"6710bf6f-ae24-4f91-a8a6-16c9c1f436a6"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":14}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":" "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD"}
  JsonSender:73 => await q.getAndSendList(obj, o => o.members, j => j.element.id,
  JsonReceiver:155 => draft.members = await q.receiveListDefined(obj.members,
{"state":"ADD","valueType":"org.openrewrite.json.tree.RightPadded"}
  JsonSender:73 => await q.getAndSendList(obj, o => o.members, j => j.element.id,
  undefined
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Member"}
  JsonSender:90 => await q.getAndSend(right, r => r.element, j => this.visit(j, q));
  JsonReceiver:179 => draft.element = await p.receive(right.element, async j => await this.visit(j, p)!) as Draft<T>;
{"state":"ADD","value":"d4ba7eb8-932a-4a92-ad98-f458eb866be9"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","ref":3}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.RightPadded"}
  JsonSender:67 => await q.getAndSend(member, m => m.key, async j => await this.visitRightPadded(j, q));
  JsonReceiver:146 => draft.key = await q.receive(member.key,
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Literal"}
  JsonSender:90 => await q.getAndSend(right, r => r.element, j => this.visit(j, q));
  JsonReceiver:179 => draft.element = await p.receive(right.element, async j => await this.visit(j, p)!) as Draft<T>;
{"state":"ADD","value":"ef15efb5-cffa-423e-8e93-a9833e9f4bfd"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":15}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":"\n    "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"\"lodash\""}
  JsonSender:61 => await q.getAndSend(literal, lit => lit.source);
  JsonReceiver:139 => draft.source = await q.receive(literal.source);
{"state":"ADD","value":"lodash"}
  JsonSender:62 => await q.getAndSend(literal, lit => lit.value);
  JsonReceiver:140 => draft.value = await q.receive(literal.value);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":16}
  JsonSender:91 => await q.getAndSend(right, r => asRef(r.after), async space => await this.visitSpace(space, q));
  JsonReceiver:180 => draft.after = await p.receive(right.after, async space => await this.visitSpace(space, p));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":""}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:92 => await q.getAndSend(right, r => r.markers);
  JsonReceiver:181 => draft.markers = await p.receiveMarkers(right.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Literal"}
  JsonSender:68 => await q.getAndSend(member, m => m.value, async j => await this.visit(j, q));
  JsonReceiver:148 => draft.value = await q.receive<Json.Value>(member.value,
{"state":"ADD","value":"d156576d-41cd-4f8b-acc3-0feb68985821"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":17}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":" "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"\"^4.17.21\""}
  JsonSender:61 => await q.getAndSend(literal, lit => lit.source);
  JsonReceiver:139 => draft.source = await q.receive(literal.source);
{"state":"ADD","value":"^4.17.21"}
  JsonSender:62 => await q.getAndSend(literal, lit => lit.value);
  JsonReceiver:140 => draft.value = await q.receive(literal.value);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":18}
  JsonSender:91 => await q.getAndSend(right, r => asRef(r.after), async space => await this.visitSpace(space, q));
  JsonReceiver:180 => draft.after = await p.receive(right.after, async space => await this.visitSpace(space, p));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":"\n  "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:92 => await q.getAndSend(right, r => r.markers);
  JsonReceiver:181 => draft.markers = await p.receiveMarkers(right.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":19}
  JsonSender:91 => await q.getAndSend(right, r => asRef(r.after), async space => await this.visitSpace(space, q));
  JsonReceiver:180 => draft.after = await p.receive(right.after, async space => await this.visitSpace(space, p));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":""}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:92 => await q.getAndSend(right, r => r.markers);
  JsonReceiver:181 => draft.markers = await p.receiveMarkers(right.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.RightPadded"}
  JsonSender:73 => await q.getAndSendList(obj, o => o.members, j => j.element.id,
  undefined
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Member"}
  JsonSender:90 => await q.getAndSend(right, r => r.element, j => this.visit(j, q));
  JsonReceiver:179 => draft.element = await p.receive(right.element, async j => await this.visit(j, p)!) as Draft<T>;
{"state":"ADD","value":"f371ec73-f998-462f-adaf-23c3b4c64939"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","ref":3}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.RightPadded"}
  JsonSender:67 => await q.getAndSend(member, m => m.key, async j => await this.visitRightPadded(j, q));
  JsonReceiver:146 => draft.key = await q.receive(member.key,
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Literal"}
  JsonSender:90 => await q.getAndSend(right, r => r.element, j => this.visit(j, q));
  JsonReceiver:179 => draft.element = await p.receive(right.element, async j => await this.visit(j, p)!) as Draft<T>;
{"state":"ADD","value":"efff142d-5ee2-4da8-b9dc-bee6d97b920a"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":20}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":"\n  "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"\"devDependencies\""}
  JsonSender:61 => await q.getAndSend(literal, lit => lit.source);
  JsonReceiver:139 => draft.source = await q.receive(literal.source);
{"state":"ADD","value":"devDependencies"}
  JsonSender:62 => await q.getAndSend(literal, lit => lit.value);
  JsonReceiver:140 => draft.value = await q.receive(literal.value);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":21}
  JsonSender:91 => await q.getAndSend(right, r => asRef(r.after), async space => await this.visitSpace(space, q));
  JsonReceiver:180 => draft.after = await p.receive(right.after, async space => await this.visitSpace(space, p));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":""}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:92 => await q.getAndSend(right, r => r.markers);
  JsonReceiver:181 => draft.markers = await p.receiveMarkers(right.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$JsonObject"}
  JsonSender:68 => await q.getAndSend(member, m => m.value, async j => await this.visit(j, q));
  JsonReceiver:148 => draft.value = await q.receive<Json.Value>(member.value,
{"state":"ADD","value":"2055fbf9-9873-493c-9f9b-5a7bcff45762"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":22}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":" "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD"}
  JsonSender:73 => await q.getAndSendList(obj, o => o.members, j => j.element.id,
  JsonReceiver:155 => draft.members = await q.receiveListDefined(obj.members,
{"state":"ADD","valueType":"org.openrewrite.json.tree.RightPadded"}
  JsonSender:73 => await q.getAndSendList(obj, o => o.members, j => j.element.id,
  undefined
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Member"}
  JsonSender:90 => await q.getAndSend(right, r => r.element, j => this.visit(j, q));
  JsonReceiver:179 => draft.element = await p.receive(right.element, async j => await this.visit(j, p)!) as Draft<T>;
{"state":"ADD","value":"1c7cdf63-d593-44da-9a4e-ac3ac01e344d"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","ref":3}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.RightPadded"}
  JsonSender:67 => await q.getAndSend(member, m => m.key, async j => await this.visitRightPadded(j, q));
  JsonReceiver:146 => draft.key = await q.receive(member.key,
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Literal"}
  JsonSender:90 => await q.getAndSend(right, r => r.element, j => this.visit(j, q));
  JsonReceiver:179 => draft.element = await p.receive(right.element, async j => await this.visit(j, p)!) as Draft<T>;
{"state":"ADD","value":"79c2ed6c-0201-49e5-bef3-91945bf2ff48"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":23}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":"\n    "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"\"@types/lodash\""}
  JsonSender:61 => await q.getAndSend(literal, lit => lit.source);
  JsonReceiver:139 => draft.source = await q.receive(literal.source);
{"state":"ADD","value":"@types/lodash"}
  JsonSender:62 => await q.getAndSend(literal, lit => lit.value);
  JsonReceiver:140 => draft.value = await q.receive(literal.value);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":24}
  JsonSender:91 => await q.getAndSend(right, r => asRef(r.after), async space => await this.visitSpace(space, q));
  JsonReceiver:180 => draft.after = await p.receive(right.after, async space => await this.visitSpace(space, p));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":""}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:92 => await q.getAndSend(right, r => r.markers);
  JsonReceiver:181 => draft.markers = await p.receiveMarkers(right.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Json$Literal"}
  JsonSender:68 => await q.getAndSend(member, m => m.value, async j => await this.visit(j, q));
  JsonReceiver:148 => draft.value = await q.receive<Json.Value>(member.value,
{"state":"ADD","value":"cbb5231a-06a8-4a6f-ada0-243163f63ecf"}
  JsonSender:25 => await q.getAndSend(j, j2 => j2.id);
  JsonReceiver:102 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":25}
  JsonSender:26 => await q.getAndSend(j, j2 => asRef(j2.prefix),
  JsonReceiver:103 => draft.prefix = await q.receive(j.prefix, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":" "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:28 => await q.getAndSend(j, j2 => j2.markers);
  JsonReceiver:104 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"\"^4.14.195\""}
  JsonSender:61 => await q.getAndSend(literal, lit => lit.source);
  JsonReceiver:139 => draft.source = await q.receive(literal.source);
{"state":"ADD","value":"^4.14.195"}
  JsonSender:62 => await q.getAndSend(literal, lit => lit.value);
  JsonReceiver:140 => draft.value = await q.receive(literal.value);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":26}
  JsonSender:91 => await q.getAndSend(right, r => asRef(r.after), async space => await this.visitSpace(space, q));
  JsonReceiver:180 => draft.after = await p.receive(right.after, async space => await this.visitSpace(space, p));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":"\n  "}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:92 => await q.getAndSend(right, r => r.markers);
  JsonReceiver:181 => draft.markers = await p.receiveMarkers(right.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":27}
  JsonSender:91 => await q.getAndSend(right, r => asRef(r.after), async space => await this.visitSpace(space, q));
  JsonReceiver:180 => draft.after = await p.receive(right.after, async space => await this.visitSpace(space, p));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":"\n"}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","ref":1}
  JsonSender:92 => await q.getAndSend(right, r => r.markers);
  JsonReceiver:181 => draft.markers = await p.receiveMarkers(right.markers);
{"state":"ADD","valueType":"org.openrewrite.json.tree.Space","ref":28}
  JsonSender:40 => await q.getAndSend(document, d => asRef(d.eof),
  JsonReceiver:116 => draft.eof = await q.receive(document.eof, async space => await this.visitSpace(space, q));
{"state":"ADD"}
  JsonSender:79 => await q.getAndSendList(space, s => s.comments, c => c.text + c.suffix, async c => {
  JsonReceiver:162 => draft.comments = await q.receiveListDefined(space.comments, async c => {
{"state":"ADD","value":""}
  JsonSender:85 => await q.getAndSend(space, s => s.whitespace);
  JsonReceiver:170 => draft.whitespace = await q.receive(space.whitespace);
{"state":"ADD","value":"2410ff3b-d200-48f4-a923-91a12602bb00"}
  JavaScriptSender:42 => await q.getAndSend(j, j2 => j2.id);
  JavaScriptReceiver:567 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.java.tree.Space"}
  JavaScriptSender:43 => await q.getAndSend(j, j2 => j2.prefix, space => this.visitSpace(space, q));
  JavaScriptReceiver:568 => draft.prefix = await q.receive(j.prefix, space => this.visitSpace(space, q));
{"state":"ADD"}
  JavaScriptSender:522 => return this.javaSender.visitSpace(space, q);
  JavaScriptReceiver:1118 => return this.javaReceiverDelegate.visitSpace(space, q);
{"state":"ADD","ref":1}
  JavaScriptSender:44 => await q.getAndSend(j, j2 => j2.markers);
  JavaScriptReceiver:569 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":"680709506811822080.ts"}
  JavaScriptSender:49 => await q.getAndSend(cu, c => c.sourcePath);
  JavaScriptReceiver:577 => draft.sourcePath = await q.receive(cu.sourcePath);
{"state":"NO_CHANGE"}
  JavaScriptSender:50 => await q.getAndSend(cu, c => c.charsetName);
  JavaScriptReceiver:578 => draft.charsetName = await q.receive(cu.charsetName);
{"state":"ADD","value":false}
  JavaScriptSender:51 => await q.getAndSend(cu, c => c.charsetBomMarked);
  JavaScriptReceiver:579 => draft.charsetBomMarked = await q.receive(cu.charsetBomMarked);
{"state":"NO_CHANGE"}
  JavaScriptSender:52 => await q.getAndSend(cu, c => c.checksum);
  JavaScriptReceiver:580 => draft.checksum = await q.receive(cu.checksum);
{"state":"NO_CHANGE"}
  JavaScriptSender:53 => await q.getAndSend(cu, c => c.fileAttributes);
  JavaScriptReceiver:581 => draft.fileAttributes = await q.receive(cu.fileAttributes);
{"state":"ADD"}
  JavaScriptSender:54 => await q.getAndSendList(cu, c => c.statements, stmt => stmt.element.id, stmt => this.visitRightPadded(stmt, q));
  JavaScriptReceiver:582 => draft.statements = await q.receiveListDefined(cu.statements, stmt => this.visitRightPadded(stmt, q));
{"state":"ADD","valueType":"org.openrewrite.java.tree.JRightPadded"}
  JavaScriptSender:54 => await q.getAndSendList(cu, c => c.statements, stmt => stmt.element.id, stmt => this.visitRightPadded(stmt, q));
  undefined
{"state":"ADD","valueType":"org.openrewrite.javascript.tree.JS$Import"}
  JavaScriptSender:510 => return this.javaSender.visitRightPadded(right, q);
  JavaScriptReceiver:1106 => return this.javaReceiverDelegate.visitRightPadded(right, q)
{"state":"ADD","value":"49502576-da0b-46ec-afae-c763626588c5"}
  JavaScriptSender:42 => await q.getAndSend(j, j2 => j2.id);
  JavaScriptReceiver:567 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.java.tree.Space"}
  JavaScriptSender:43 => await q.getAndSend(j, j2 => j2.prefix, space => this.visitSpace(space, q));
  JavaScriptReceiver:568 => draft.prefix = await q.receive(j.prefix, space => this.visitSpace(space, q));
{"state":"ADD"}
  JavaScriptSender:522 => return this.javaSender.visitSpace(space, q);
  JavaScriptReceiver:1118 => return this.javaReceiverDelegate.visitSpace(space, q);
{"state":"ADD","ref":1}
  JavaScriptSender:44 => await q.getAndSend(j, j2 => j2.markers);
  JavaScriptReceiver:569 => draft.markers = await q.receive(j.markers);
{"state":"ADD"}
  JavaScriptSender:137 => await q.getAndSendList(jsImport, el => el.modifiers, el => el.id, el => this.visit(el, q));
  JavaScriptReceiver:680 => draft.modifiers = await q.receiveListDefined(draft.modifiers, el => this.visitDefined<J.Modifier>(el, q));
{"state":"ADD","valueType":"org.openrewrite.javascript.tree.JS$ImportClause"}
  JavaScriptSender:138 => await q.getAndSend(jsImport, el => el.importClause, el => this.visit(el, q));
  JavaScriptReceiver:681 => draft.importClause = await q.receive(draft.importClause, el => this.visitDefined<JS.ImportClause>(el, q));
{"state":"ADD","value":"3d34b6c1-5d85-47e5-bf94-e406dce1c7bd"}
  JavaScriptSender:42 => await q.getAndSend(j, j2 => j2.id);
  JavaScriptReceiver:567 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.java.tree.Space"}
  JavaScriptSender:43 => await q.getAndSend(j, j2 => j2.prefix, space => this.visitSpace(space, q));
  JavaScriptReceiver:568 => draft.prefix = await q.receive(j.prefix, space => this.visitSpace(space, q));
{"state":"ADD"}
  JavaScriptSender:522 => return this.javaSender.visitSpace(space, q);
  JavaScriptReceiver:1118 => return this.javaReceiverDelegate.visitSpace(space, q);
{"state":"ADD","ref":1}
  JavaScriptSender:44 => await q.getAndSend(j, j2 => j2.markers);
  JavaScriptReceiver:569 => draft.markers = await q.receive(j.markers);
{"state":"ADD","value":false}
  JavaScriptSender:146 => await q.getAndSend(jsImportClause, el => el.typeOnly);
  JavaScriptReceiver:690 => draft.typeOnly = await q.receive(draft.typeOnly);
{"state":"ADD","valueType":"org.openrewrite.java.tree.JRightPadded"}
  JavaScriptSender:147 => await q.getAndSend(jsImportClause, el => el.name, el => this.visitRightPadded(el, q));
  JavaScriptReceiver:691 => draft.name = await q.receive(draft.name, el => this.visitRightPadded(el, q));
{"state":"ADD","valueType":"org.openrewrite.java.tree.J$Identifier"}
  JavaScriptSender:510 => return this.javaSender.visitRightPadded(right, q);
  JavaScriptReceiver:1106 => return this.javaReceiverDelegate.visitRightPadded(right, q)
{"state":"ADD","value":"7fa7b9a9-1825-493f-abe5-e9888ebced4e"}
  JavaScriptSender:510 => return this.javaSender.visitRightPadded(right, q);
  undefined
{"state":"NO_CHANGE"}
  JavaScriptSender:148 => await q.getAndSend(jsImportClause, el => el.namedBindings, el => this.visit(el, q));
  JavaScriptReceiver:692 => draft.namedBindings = await q.receive(draft.namedBindings, el => this.visitDefined<Expression>(el, q));
{"state":"ADD","valueType":"org.openrewrite.java.tree.JLeftPadded"}
  JavaScriptSender:139 => await q.getAndSend(jsImport, el => el.moduleSpecifier, el => this.visitLeftPadded(el, q));
  JavaScriptReceiver:682 => draft.moduleSpecifier = await q.receive(draft.moduleSpecifier, el => this.visitLeftPadded(el, q));
{"state":"ADD","valueType":"org.openrewrite.java.tree.Space"}
  JavaScriptSender:514 => return this.javaSender.visitLeftPadded(left, q);
  JavaScriptReceiver:1110 => return this.javaReceiverDelegate.visitLeftPadded(left, q);
{"state":"ADD"}
  JavaScriptSender:514 => return this.javaSender.visitLeftPadded(left, q);
  undefined
{"state":"NO_CHANGE"}
  JavaScriptSender:140 => await q.getAndSend(jsImport, el => el.attributes, el => this.visit(el, q));
  JavaScriptReceiver:683 => draft.attributes = await q.receive(draft.attributes, el => this.visitDefined<JS.ImportAttributes>(el, q));
{"state":"NO_CHANGE"}
  JavaScriptSender:141 => await q.getAndSend(jsImport, el => el.initializer, el => this.visitLeftPadded(el, q));
  JavaScriptReceiver:684 => draft.initializer = await q.receive(draft.initializer, el => this.visitLeftPadded(el, q));
{"state":"ADD","valueType":"org.openrewrite.java.tree.JRightPadded"}
  JavaScriptSender:54 => await q.getAndSendList(cu, c => c.statements, stmt => stmt.element.id, stmt => this.visitRightPadded(stmt, q));
  undefined
{"state":"ADD","valueType":"org.openrewrite.java.tree.J$VariableDeclarations"}
  JavaScriptSender:510 => return this.javaSender.visitRightPadded(right, q);
  JavaScriptReceiver:1106 => return this.javaReceiverDelegate.visitRightPadded(right, q)
{"state":"ADD","value":"c386461a-3b33-4e6a-bb6c-f0356caea42e"}
  JavaScriptSender:510 => return this.javaSender.visitRightPadded(right, q);
  undefined
{"state":"ADD","value":"6c66a7bd-3424-426e-9462-443b62b98a01"}
  JavaScriptSender:42 => await q.getAndSend(j, j2 => j2.id);
  JavaScriptReceiver:567 => draft.id = await q.receive(j.id);
{"state":"ADD","valueType":"org.openrewrite.java.tree.Space"}
  JavaScriptSender:43 => await q.getAndSend(j, j2 => j2.prefix, space => this.visitSpace(space, q));
  JavaScriptReceiver:568 => draft.prefix = await q.receive(j.prefix, space => this.visitSpace(space, q));
{"state":"ADD"}
  JavaScriptSender:522 => return this.javaSender.visitSpace(space, q);
  JavaScriptReceiver:1118 => return this.javaReceiverDelegate.visitSpace(space, q);
{"state":"ADD","ref":1}
  JavaScriptSender:44 => await q.getAndSend(j, j2 => j2.markers);
  JavaScriptReceiver:569 => draft.markers = await q.receive(j.markers);
{"state":"ADD"}
  JavaScriptSender:66 => await q.getAndSendList(arrowFunction, el => el.leadingAnnotations, el => el.id, el => this.visit(el, q));
  JavaScriptReceiver:597 => draft.leadingAnnotations = await q.receiveListDefined(draft.leadingAnnotations, el => this.visitDefined<J.Annotation>(el, q));
{"state":"ADD"}
  JavaScriptSender:67 => await q.getAndSendList(arrowFunction, el => el.modifiers, el => el.id, el => this.visit(el, q));
  JavaScriptReceiver:598 => draft.modifiers = await q.receiveListDefined(draft.modifiers, el => this.visitDefined<J.Modifier>(el, q));
{"state":"NO_CHANGE"}
  JavaScriptSender:68 => await q.getAndSend(arrowFunction, el => el.typeParameters, el => this.visit(el, q));
  JavaScriptReceiver:599 => draft.typeParameters = await q.receive(draft.typeParameters, el => this.visitDefined<J.TypeParameters>(el, q));
{"state":"ADD","valueType":"org.openrewrite.java.tree.J$Lambda"}
  JavaScriptSender:69 => await q.getAndSend(arrowFunction, el => el.lambda, el => this.visit(el, q));
  JavaScriptReceiver:600 => draft.lambda = await q.receive(draft.lambda, el => this.visitDefined<J.Lambda>(el, q));
{"state":"ADD","value":"afa2a3d0-844a-4691-805f-c9348a45c9a8"}
  JavaScriptSender:38 => return this.javaSender.visit(tree, p, parent);
  JavaScriptReceiver:561 => return this.javaReceiverDelegate.visit(tree, p, parent);
{"state":"NO_CHANGE"}
  JavaScriptSender:70 => await q.getAndSend(arrowFunction, el => el.returnTypeExpression, el => this.visit(el, q));
  JavaScriptReceiver:601 => draft.returnTypeExpression = await q.receive(draft.returnTypeExpression, el => this.visitDefined<TypeTree>(el, q));
{"state":"ADD","valueType":"org.openrewrite.java.tree.Space"}
  JavaScriptSender:55 => await q.getAndSend(cu, c => c.eof, space => this.visitSpace(space, q));
  JavaScriptReceiver:583 => draft.eof = await q.receive(cu.eof, space => this.visitSpace(space, q));
{"state":"ADD"}
  JavaScriptSender:522 => return this.javaSender.visitSpace(space, q);
  JavaScriptReceiver:1118 => return this.javaReceiverDelegate.visitSpace(space, q);
